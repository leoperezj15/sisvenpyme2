<?php
                
/**
 * @author		Leonardo Perez Justiniano
 * @copyright 	2019
 * @version     1.0
 */

require_once "data/db.inc";
require_once "data/Venta.inc";
require_once "data/Cliente.inc";
require_once "data/Usuario.inc";
require_once "data/Empleado.inc";
require_once "data/Almacen.inc";
require_once "data/Sucursal.inc";

                     
class Venta_Model extends DataBase
{
    function __construct()
    {
        $this->Open();
    }
    
    /** 
     * @abstract Funcion para obtener un cliente(s) 
     * @return Lista de Structure_ClienteGeneral
     */
    function SaveVenta($_osVenta)
    {
        $sql = "INSERT INTO `venta` values(".$_osVenta->idVenta->GetValue().",
            '".$_osVenta->hash->GetValue()."',
            ".$_osVenta->idCliente->GetValue().",
            ".$_osVenta->idUsuario->GetValue().",
            ".$_osVenta->idAlmacen->GetValue().",
            '".$_osVenta->fecha_hora->GetValue()."',
            ".$_osVenta->monto_total->GetValue().",
            ".$_osVenta->monto_descuento->GetValue().",
            '".$_osVenta->estado->GetValue()."')";
        
        $res = $this->Execute($sql);

        $id   = $this->GetLastIdAutoGenerated();

        $hash = sha1($id);

        $sql2 = "UPDATE venta SET hash = '".$hash."' WHERE idVenta = ".$id;
        
        $res2 = $this->Execute($sql2);
        
        return $id;
    }

    function GetListVenta($_idUsuario)
    {
        $sql = "SELECT 
        t1.idVenta AS t1_idVenta,
        t1.hash AS t1_hash,
        t1.idCliente AS t1_idCliente,
        t1.idUsuario as t1_idUsuario,
        t1.idAlmacen as t1_idAlmacen,
        t1.fecha_hora as t1_fecha_hora,
        t1.monto_total as t1_monto_total,
        t1.monto_descuento as t1_monto_descuento,
        t1.estado as t1_estado,

        t2.idhash as t2_idhash,
        t2.NombreCompleto as t2_NombreCompleto,
        t2.nroDocumento as t2_nroDocumento,
        t2.tipoCliente as t2_tipoCliente,

        t3.username as t3_username,

        t4.sigla as t4_sigla

        FROM `venta` t1
        INNER JOIN `clientegeneral` t2 on t1.idCliente=t2.idCliente
        INNER JOIN `usuario` t3 on t1.idUsuario = t3.idUsuario
        INNER JOIN `almacen` t4 on t1.idAlmacen = t4.idAlmacen
        WHERE t1.idUsuario = ".$_idUsuario."
        ORDER BY t1.fecha_hora DESC";

        $res = $this->Execute($sql);
        
        $listaVenta = array();

        if ($this->ContainsData($res))
        {
            $data = $this->DataListStructure($res);

            foreach($data as $item)
            {
                $osVenta = new Structure_Venta;
                $osCliente = new Structure_Cliente;
                $osUsuario = new Structure_Usuario;
                $osAlmacen = new Structure_Almacen;

                //Voy a utilizar la Estrucutra de Clientes para LLevar datos Genericos de la Vista Cliente General
                $osCliente->idCliente->SetValue($item["t1_idCliente"]);
                $osCliente->direccion->SetValue($item["t2_NombreCompleto"]);//Esto llevara el nombre Completo
                $osCliente->zona->SetValue($item["t2_nroDocumento"]);//Esto llevara el nro documento
                $osCliente->hash->SetValue($item["t2_tipoCliente"]);//Esto llevara el tipo de Cliente

                $osAlmacen->idAlmacen->SetValue($item["t1_idAlmacen"]);
                $osAlmacen->sigla->SetValue($item["t4_sigla"]);

                $osUsuario->idUsuario->SetValue($item["t1_idUsuario"]);
                $osUsuario->username->SetValue($item["t3_username"]);

                $osVenta->idVenta->SetValue($item["t1_idVenta"]);
                $osVenta->hash->SetValue($item["t1_hash"]);
                $osVenta->idCliente->SetValue($item["t1_idCliente"]);
                $osVenta->idUsuario->SetValue($item["t1_idUsuario"]);
                $osVenta->idAlmacen->SetValue($item["t1_idAlmacen"]);
                $osVenta->fecha_hora->SetValue($item["t1_fecha_hora"]);
                $osVenta->monto_total->SetValue($item["t1_monto_total"]);
                $osVenta->monto_descuento->SetValue($item["t1_monto_descuento"]);
                $osVenta->estado->SetValue($item["t1_estado"]);

                $osVenta->Cliente = $osCliente;
                $osVenta->Usuario = $osUsuario;
                $osVenta->Almacen = $osAlmacen;

                $listaVenta[] = $osVenta;
               
            }

             return $listaVenta;//devolver una lista[]          
        }
        else
        {
            return false;
        }
        
        
    }
    function GetDataVenta($_hash)
    {
        $sql = "SELECT 
        t1.idVenta AS t1_idVenta,
        t1.hash AS t1_hash,
        t1.idCliente AS t1_idCliente,
        t1.idUsuario as t1_idUsuario,
        t1.idAlmacen as t1_idAlmacen,
        t1.fecha_hora as t1_fecha_hora,
        t1.monto_total as t1_monto_total,
        t1.monto_descuento as t1_monto_descuento,
        t1.estado as t1_estado,

        t2.idhash as t2_idhash,
        t2.NombreCompleto as t2_NombreCompleto,
        t2.nroDocumento as t2_nroDocumento,
        t2.tipoCliente as t2_tipoCliente,

        t3.username as t3_username,

        t4.sigla as t4_sigla,
        
        t5.idSucursal as t5_idSucursal,
        t5.Nombre as t5_sucursal,
        t5.Direccion as t5_direccion

        FROM `venta` t1
        INNER JOIN `clientegeneral` t2 on t1.idCliente=t2.idCliente
        INNER JOIN `usuario` t3 on t1.idUsuario = t3.idUsuario
        INNER JOIN `almacen` t4 on t1.idAlmacen = t4.idAlmacen
        INNER JOIN `sucursal` t5 ON t5.idSucursal = t4.idSucursal
        WHERE t1.hash = '".$_hash."' ";

        $res = $this->Execute($sql);
        
        $listaVenta = array();

        if ($this->ContainsData($res))
        {
            $data = $this->DataListStructure($res);

            foreach($data as $item)
            {
                $osVenta = new Structure_Venta;
                $osCliente = new Structure_Cliente;
                $osUsuario = new Structure_Usuario;
                $osAlmacen = new Structure_Almacen;
                $osSucursal = new Structure_Sucursal;

                //Voy a utilizar la Estrucutra de Clientes para LLevar datos Genericos de la Vista Cliente General
                $osCliente->idCliente->SetValue($item["t1_idCliente"]);
                $osCliente->direccion->SetValue($item["t2_NombreCompleto"]);//Esto llevara el nombre Completo
                $osCliente->zona->SetValue($item["t2_nroDocumento"]);//Esto llevara el nro documento
                $osCliente->hash->SetValue($item["t2_tipoCliente"]);//Esto llevara el tipo de Cliente

                $osSucursal->idSucursal->SetValue($item["t5_idSucursal"]);
                $osSucursal->Nombre->SetValue($item["t5_sucursal"]);
                $osSucursal->Direccion->SetValue($item["t5_direccion"]);

                $osAlmacen->Sucursal = $osSucursal;

                $osAlmacen->idAlmacen->SetValue($item["t1_idAlmacen"]);
                $osAlmacen->sigla->SetValue($item["t4_sigla"]);

                $osUsuario->idUsuario->SetValue($item["t1_idUsuario"]);
                $osUsuario->username->SetValue($item["t3_username"]);

                $osVenta->idVenta->SetValue($item["t1_idVenta"]);
                $osVenta->hash->SetValue($item["t1_hash"]);
                $osVenta->idCliente->SetValue($item["t1_idCliente"]);
                $osVenta->idUsuario->SetValue($item["t1_idUsuario"]);
                $osVenta->idAlmacen->SetValue($item["t1_idAlmacen"]);
                $osVenta->fecha_hora->SetValue($item["t1_fecha_hora"]);
                $osVenta->monto_total->SetValue($item["t1_monto_total"]);
                $osVenta->monto_descuento->SetValue($item["t1_monto_descuento"]);
                $osVenta->estado->SetValue($item["t1_estado"]);

                $osVenta->Cliente = $osCliente;
                $osVenta->Usuario = $osUsuario;
                $osVenta->Almacen = $osAlmacen;

                $listaVenta[] = $osVenta;
               
            }

             return $listaVenta;//devolver una lista[]          
        }
        else
        {
            return false;
        }


    }
    /** funcion para verificar las ventas por rangos de fecha
     * @param $_ini, $_fin
     * 
     * 
    */

    function ReporteVentasFechas($_ini,$_fin)
    {
        $sql = "SELECT 
        t1.idVenta AS t1_idVenta,
        t1.hash AS t1_hash,
        t1.idCliente AS t1_idCliente,
        t1.idUsuario as t1_idUsuario,
        t1.idAlmacen as t1_idAlmacen,
        t1.fecha_hora as t1_fecha_hora,
        t1.monto_total as t1_monto_total,
        t1.monto_descuento as t1_monto_descuento,
        t1.estado as t1_estado,

        t2.idhash as t2_idhash,
        t2.NombreCompleto as t2_NombreCompleto,
        t2.nroDocumento as t2_nroDocumento,
        t2.tipoCliente as t2_tipoCliente,

        t3.username as t3_username,

        t4.sigla as t4_sigla

        FROM `venta` t1
        INNER JOIN `clientegeneral` t2 on t1.idCliente=t2.idCliente
        INNER JOIN `usuario` t3 on t1.idUsuario = t3.idUsuario
        INNER JOIN `almacen` t4 on t1.idAlmacen = t4.idAlmacen
        WHERE  t1.fecha_hora BETWEEN '".$_ini."'  AND  '".$_fin."'
        ORDER BY t1.fecha_hora DESC";

        $res = $this->Execute($sql);
        
        $listaVenta = array();

        if ($this->ContainsData($res))
        {
            $data = $this->DataListStructure($res);

            foreach($data as $item)
            {
                $osVenta = new Structure_Venta;
                $osCliente = new Structure_Cliente;
                $osUsuario = new Structure_Usuario;
                $osAlmacen = new Structure_Almacen;

                //Voy a utilizar la Estrucutra de Clientes para LLevar datos Genericos de la Vista Cliente General
                $osCliente->idCliente->SetValue($item["t1_idCliente"]);
                $osCliente->direccion->SetValue($item["t2_NombreCompleto"]);//Esto llevara el nombre Completo
                $osCliente->zona->SetValue($item["t2_nroDocumento"]);//Esto llevara el nro documento
                $osCliente->hash->SetValue($item["t2_tipoCliente"]);//Esto llevara el tipo de Cliente

                $osAlmacen->idAlmacen->SetValue($item["t1_idAlmacen"]);
                $osAlmacen->sigla->SetValue($item["t4_sigla"]);

                $osUsuario->idUsuario->SetValue($item["t1_idUsuario"]);
                $osUsuario->username->SetValue($item["t3_username"]);

                $osVenta->idVenta->SetValue($item["t1_idVenta"]);
                $osVenta->hash->SetValue($item["t1_hash"]);
                $osVenta->idCliente->SetValue($item["t1_idCliente"]);
                $osVenta->idUsuario->SetValue($item["t1_idUsuario"]);
                $osVenta->idAlmacen->SetValue($item["t1_idAlmacen"]);
                $osVenta->fecha_hora->SetValue($item["t1_fecha_hora"]);
                $osVenta->monto_total->SetValue($item["t1_monto_total"]);
                $osVenta->monto_descuento->SetValue($item["t1_monto_descuento"]);
                $osVenta->estado->SetValue($item["t1_estado"]);

                $osVenta->Cliente = $osCliente;
                $osVenta->Usuario = $osUsuario;
                $osVenta->Almacen = $osAlmacen;

                $listaVenta[] = $osVenta;
               
            }

             return $listaVenta;//devolver una lista[]          
        }
        else
        {
            return false;
        }
    }

    /**
    *
    *
    *
    */
    function ReportVentas($_fi,$_ff,$_usuario,$_cliente)
    {
        $usuario = "";
        $cliente = "";
        if ($_usuario != "No") 
        {
            $usuario = "AND t1.idUsuario = ".$_usuario;
        }

        if ($_cliente != "No") 
        {
            $cliente = "AND t1.idCliente = ".$_cliente;
        }

        $sql = "SELECT 
        t1.idVenta AS t1_idVenta,
        t1.hash AS t1_hash,
        t1.idCliente AS t1_idCliente,
        t1.idUsuario as t1_idUsuario,
        t1.idAlmacen as t1_idAlmacen,
        t1.fecha_hora as t1_fecha_hora,
        t1.monto_total as t1_monto_total,
        t1.monto_descuento as t1_monto_descuento,
        t1.estado as t1_estado,

        t2.idhash as t2_idhash,
        t2.NombreCompleto as t2_NombreCompleto,
        t2.nroDocumento as t2_nroDocumento,
        t2.tipoCliente as t2_tipoCliente,

        t3.username as t3_username,
        
        t6.idEmpleado as t6_idEmpleado,
        t6.nombre as t6_nombre,
        t6.a_paterno as t6_a_paterno,
        t6.a_materno as t6_a_materno,

        t4.sigla as t4_sigla,
        
        t5.Nombre as t5_nombre

        FROM `venta` t1
        INNER JOIN `clientegeneral` t2 on t1.idCliente=t2.idCliente
        INNER JOIN `usuario` t3 on t1.idUsuario = t3.idUsuario
        INNER JOIN `empleado` t6 on t3.idEmpleado = t6.idEmpleado
        INNER JOIN `almacen` t4 on t1.idAlmacen = t4.idAlmacen
        INNER JOIN `sucursal` t5 on t4.idSucursal = t5.idSucursal
        WHERE  t1.fecha_hora BETWEEN '".$_fi." 00:00:00'  AND  '".$_ff." 23:59:59' ".$cliente." ".$usuario. " 
        AND t1.estado = 'Facturado'
        ORDER BY t1.fecha_hora DESC";

        // echo "<pre>";
        // print_r($sql);
        // echo "<pre>";

        $res = $this->Execute($sql);

        
        
        $listaVenta = array();

        if ($this->ContainsData($res))
        {
            $data = $this->DataListStructure($res);
            

            foreach($data as $item)
            {
                $osVenta = new Structure_Venta;
                $osCliente = new Structure_Cliente;
                $osUsuario = new Structure_Usuario;
                $osEmpleado = new Structure_Empleado;
                $osAlmacen = new Structure_Almacen;
                $osSucursal = new Structure_Sucursal;

                //Voy a utilizar la Estrucutra de Clientes para LLevar datos Genericos de la Vista Cliente General
                $osCliente->idCliente->SetValue($item["t1_idCliente"]);
                $osCliente->direccion->SetValue($item["t2_NombreCompleto"]);//Esto llevara el nombre Completo
                $osCliente->zona->SetValue($item["t2_nroDocumento"]);//Esto llevara el nro documento
                $osCliente->hash->SetValue($item["t2_tipoCliente"]);//Esto llevara el tipo de Cliente

                $osUsuario->idUsuario->SetValue($item["t1_idUsuario"]);
                $osUsuario->username->SetValue($item["t3_username"]);

                $osEmpleado->idEmpleado->SetValue($item["t6_idEmpleado"]);
                $osEmpleado->nombre->SetValue($item["t6_nombre"]);
                $osEmpleado->a_paterno->SetValue($item["t6_a_paterno"]);
                $osEmpleado->a_materno->SetValue($item["t6_a_materno"]);

                $osUsuario->Empleado = $osEmpleado;

                $osAlmacen->idAlmacen->SetValue($item["t1_idAlmacen"]);
                $osAlmacen->sigla->SetValue($item["t4_sigla"]);

                $osSucursal->Nombre->SetValue($item["t5_nombre"]);

                $osAlmacen->Sucursal = $osSucursal;

                $osVenta->idVenta->SetValue($item["t1_idVenta"]);
                $osVenta->hash->SetValue($item["t1_hash"]);
                $osVenta->idCliente->SetValue($item["t1_idCliente"]);
                $osVenta->idUsuario->SetValue($item["t1_idUsuario"]);
                $osVenta->idAlmacen->SetValue($item["t1_idAlmacen"]);
                $osVenta->fecha_hora->SetValue($item["t1_fecha_hora"]);
                $osVenta->monto_total->SetValue($item["t1_monto_total"]);
                $osVenta->monto_descuento->SetValue($item["t1_monto_descuento"]);
                $osVenta->estado->SetValue($item["t1_estado"]);

                $osVenta->Cliente = $osCliente;
                $osVenta->Usuario = $osUsuario;
                $osVenta->Almacen = $osAlmacen;

                $listaVenta[] = $osVenta;
               
            }

             return $listaVenta;//devolver una lista[]          
        }
        else
        {
            return false;
        }

    }
    /** 
     * @abstract Función para contar nro de ventas
     * @param $_username
     * @return int o false
     * 
    */
    function ContarVentas($_username)
    {
        $sql = "SELECT COUNT(idVenta) as NroVenta FROM venta WHERE idUsuario=".$_username;

        $res = $this->Execute($sql);

        if ($this->ContainsData($res))
        {
            $row = $this->FetchArray($res);

            $nroVenta = $row["NroVenta"];

            return $nroVenta;
        }
        else
        {
            return false;
        }
    }
    /**
     * @abstract Función para sumar el total de ventas
     * @param $_username
     * @return int o false
     */
    function SumarVentas($_username)
    {
        $sql = "SELECT SUM(monto_total) as SumaVenta FROM venta WHERE idUsuario=".$_username;

        $res = $this->Execute($sql);

        if ($this->ContainsData($res))
        {
            $row = $this->FetchArray($res);

            $sumaVenta = $row["SumaVenta"];

            return $sumaVenta;
        }
        else
        {
            return 0;
        }
    }
    



}
                
?>