<?php
                
/**
 * @author		Leonardo Perez Justiniano
 * @copyright 	2019
 * @version     1.0
 */

require_once "data/db.inc";
require_once "data/Empleado.inc";
                     
class Empleados_Model extends DataBase
{
    function __construct()
    {
        $this->Open();
    }
    
    /** 
     * @abstract Función para obtener la lista de empleado(s) 
     * @return Lista de Structure_Empleado
     */
    function GetListEmpleadoSU()
    {
        $sql = "SELECT * from empleado WHERE condicion='SU'";

        $res = $this->Execute($sql);
        
        $listEmpleado = array();

        if ($this->ContainsData($res))
        {
            $data = $this->DataListStructure($res);

            foreach($data as $item)
            {
                $osEmpleado = new Structure_Empleado;

 				$osEmpleado->idEmpleado->SetValue($item["idEmpleado"]);
 				$osEmpleado->hash->SetValue($item["hash"]);
 				$osEmpleado->nombre->SetValue($item["nombre"]);
                $osEmpleado->a_paterno->SetValue($item["a_paterno"]);
                $osEmpleado->a_materno->SetValue($item["a_materno"]);
                $osEmpleado->fecha_nac->SetValue($item["fecha_nac"]);
                $osEmpleado->ci->SetValue($item["ci"]);
                $osEmpleado->estado->SetValue($item["estado"]);

 				$listEmpleado[] = $osEmpleado;                
            }            
        }
        
        return $listEmpleado;
    }
    /**
     * Funcion para verificar si existe empleado en realcion a su CI
     */
    function VerificarEmpleado($_ci)
    {
        $sql = "Select * from empleado where ci=" .base64_decode($_ci). "";
        $res = $this->Execute($sql);
        if ($this->ContainsData($res))
        {
            return true;          
        }
        else
        {
            return false;
        }
    }
    /** 
     * @abstract Función para obtener los Datos de Empleado(s)
     * @param string hash
     * @return Structure_Empleado
     */
    function GetDataEmpleado($_hash)
    {
        $sql = "Select * from empleado where hash = '". $_hash . "'";

        $res = $this->Execute($sql);
        
        $osEmpleado = new Structure_Empleado;
        
        if ($this->ContainsData($res))
        {
            $data = $this->DataListStructure($res);            
            
            foreach($data as $item)
            {
 				$osEmpleado->idEmpleado->SetValue($item["idEmpleado"]);
 				$osEmpleado->hash->SetValue($item["hash"]);
 				$osEmpleado->nombre->SetValue($item["nombre"]);
 				$osEmpleado->apPaterno->SetValue($item["apPaterno"]);
                $osEmpleado->apMaterno->SetValue($item["apMaterno"]);
                $osEmpleado->fechaNacimiento->SetValue($item["fechaNacimiento"]);
                $osEmpleado->ci->SetValue($item["ci"]);
                $osEmpleado->estado->SetValue($item["estado"]);
            }            
        }
        
        return $osEmpleado;
    }
    
    /** 
     * @abstract Funcion para guardar Empleado
     * @param Structure_Modulo osEmpleado
     * @return bool
     */
    function SaveEmpleado($_osEmpleado)
    {
        if ($_osEmpleado->condicion->GetValue()=='CU') 
        {
            $sql = "Insert into empleado values (
                ".$_osEmpleado->idEmpleado->GetValue().",
                '".$_osEmpleado->hash->GetValue()."',
                '".$_osEmpleado->nombre->GetValue()."',
                '".$_osEmpleado->a_paterno->GetValue()."',
                '".$_osEmpleado->a_materno->GetValue()."',
                '".$_osEmpleado->fecha_nac->GetValue()."',
                '".$_osEmpleado->ci->GetValue()."',
                '".$_osEmpleado->fecha_ingreso->GetValue()."',
                '".$_osEmpleado->fecha_despido->GetValue()."',
                '".$_osEmpleado->condicion->GetValue()."',
                '".$_osEmpleado->estado->GetValue()."')";

            $res = $this->Execute($sql);

            $id   = $this->GetLastIdAutoGenerated();
            $hash = sha1($id);
            $sql2 = "Update empleado set hash = '".$hash."' where idEmpleado = ".$id;
            $res2 = $this->Execute($sql2);
            
            $r = ($res and $res2) ? $id : false;
            return $r;
        }
        else
        {
            $sql = "Insert into empleado values (
                ".$_osEmpleado->idEmpleado->GetValue().",
                '".$_osEmpleado->hash->GetValue()."',
                '".$_osEmpleado->nombre->GetValue()."',
                '".$_osEmpleado->a_paterno->GetValue()."',
                '".$_osEmpleado->a_materno->GetValue()."',
                '".$_osEmpleado->fecha_nac->GetValue()."',
                '".$_osEmpleado->ci->GetValue()."',
                '".$_osEmpleado->fecha_ingreso->GetValue()."',
                '".$_osEmpleado->fecha_despido->GetValue()."',
                '".$_osEmpleado->condicion->GetValue()."',
                '".$_osEmpleado->estado->GetValue()."')";

            $res = $this->Execute($sql);

            $id   = $this->GetLastIdAutoGenerated();
            $hash = sha1($id);
            $sql2 = "Update empleado set hash = '".$hash."' where idEmpleado = ".$id;
            $res2 = $this->Execute($sql2);
            
            $r = ($res and $res2) ? true : false;
            return $r;

        }
        
    }
    
    /** 
     * @abstract Función para actualizar modulo
     * @param Structure_Modulo osModulo
     * @return bool
     */
    function UpdateEmpleado($_osEmpleado)
    {
        $sql = "Update empleado set 
					nombre = '" . $_osEmpleado->nombre->GetValue() . "',
                    apPaterno = '" . $_osEmpleado->apPaterno->GetValue() . "',
                    apMaterno = '" . $_osEmpleado->apMaterno->GetValue() . "',
                    fechaNacimiento = '" . $_osEmpleado->fechaNacimiento->GetValue() . "',
                    ci = '" . $_osEmpleado->ci->GetValue() . "',
					estado = '" . $_osEmpleado->estado->GetValue() . "'
				where hash = '" . $_osEmpleado->hash->GetValue() . "'";
        $res = $this->Execute($sql);
        
        return $res;
    }
    
    /** 
     * @abstract Función para eliminar empleado
     * @param string hash
     * @return bool
     */
    function DeleteEmpleado($_hash)
    {
        $sql = "Update empleado set estado = 'Inactivo' where hash = '" . $_hash . "'";
        $res = $this->Execute($sql);
        
        return $res;
    }

    /** 
     * @abstract Función para activar Empleado
     * @param string hash
     * @return bool
     */
    function ActiveEmpleado($_hash)
    {
        $sql = "Update empleado set estado = 'Activo' where hash = '" . $_hash . "'";
        $res = $this->Execute($sql);
        
        return $res;
    }
    function VerificarCI($_ci)
    {
        $sql = "select * from `empleado` where ci=".$_ci."";

        $res = $this->Execute($sql);

        if ($this->ContainsData($res))
        {

            $row = $this->FetchArray($res);      
            //return $osNatural;
            return true;
        }
        else
        {
            //return $osNatural;
            return false;
        }
        
    }

}
                
?>